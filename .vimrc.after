"colorscheme solarized
"color tomorrow
"color tomorrow-night

"higher contrast for zenburn
"let g:zenburn_high_Contrast=1
color zenburn

" change font
set guifont=Inconsolata:h18

" GRO: remap leader
let mapleader = ","

"Nobody puts CtrlP in a corner
"
nmap ; :CtrlPBuffer<CR>
":let g:ctrlp_map = '<Leader>t'
"let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'
let g:ctrlp_match_window_bottom = 0
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_dotfiles = 0
let g:ctrlp_switch_buffer = 0

" NERDTree configuration
let NERDTreeIgnore=['\.pyc$', '\.rbc$', '\~$']
map <Leader>n :NERDTreeToggle<CR>

let NERDTreeShowHidden=1

" Strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Convert tabs to spaces
function! <SID>ReTab()
  retab
endfunction
autocmd BufWritePre * :call <SID>ReTab()

" show long lines
set colorcolumn=120

"smart movement over long lines
nmap j gj
nmap k gk

" The incsearch option highlights as you type an expression
" ignorecase plus smartcase make searches case-insensitive except when you include upper-case characters
"   (so /foo matches FOO and fOo, but /FOO only matches the former).
" hlsearch is a useful option which highlights the current search, but the highlight can become annoying
" so it makes sense to have a key to clear the highlight when you no longer need it:
:set incsearch
:set ignorecase
:set smartcase
:set hlsearch
:nmap \q :nohlsearch<CR>

"quickly toggle between coding styles
:nmap \t :set expandtab tabstop=4 shiftwidth=4 softtabstop=4<CR>
:nmap \T :set expandtab tabstop=8 shiftwidth=8 softtabstop=4<CR>
:nmap \M :set noexpandtab tabstop=8 softtabstop=4 shiftwidth=4<CR>
:nmap \m :set expandtab tabstop=2 shiftwidth=2 softtabstop=2<CR>

"Quickly toggle wrap mode
:nmap \w :setlocal wrap!<CR>:setlocal wrap?<CR>

" Buffers
" " Switch between buffers
noremap <tab> :bn<CR>
noremap <S-tab> :bp<CR>
